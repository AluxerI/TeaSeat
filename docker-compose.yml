version: "3.8"

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    depends_on:
      - pgsql
      # - redis
    networks:
      - app

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - WATCHPACK_POLLING=true
  #   volumes:
  #     - ./frontend:/app/frontend
  #   depends_on:
  #     - backend
  #   networks:
  #     - app

  pgsql:
    image: postgres:13
    restart: always
    container_name: pgsql
    environment:
      - POSTGRES_USER my_user
      - POSTGRES_PASSWORD 102101
      - POSTGRES_DB teaseatsql
    ports:
      - "5436:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./databases-files:/databases-files
    networks:
      - app

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   volumes:
  #     - ./data/redis/data
  #   networks:
  #     - app

networks:
  app:
    driver: bridge
